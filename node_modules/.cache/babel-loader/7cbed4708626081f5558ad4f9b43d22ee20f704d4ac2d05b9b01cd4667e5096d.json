{"ast":null,"code":"var _jsxFileName = \"/Users/dip/VSCode/react_staging/src/component/Header/header.jsx\";\nimport React, { Component } from 'react';\nimport PropType from 'prop-types';\nimport './header.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Header extends Component {\n  constructor() {\n    super(...arguments);\n    this.handleKeyUp = event => {\n      const {\n        target,\n        keyCode\n      } = event;\n      //keyCode:是键盘点击的那一个键值，13代表着回车2\n      //判断是否是回车\n      if (keyCode !== 13) return;\n      //判断这个输入是否空\n      if (target.value.trim() === '') {\n        alert(\"输入的不能为空\");\n        return;\n      }\n      this.props.code(target.value);\n      target.value = \"\";\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-header\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        onKeyUp: this.handleKeyUp,\n        type: \"text\",\n        placeholder: \"\\u8BF7\\u8F93\\u5165\\u4F60\\u7684\\u4EFB\\u52A1\\u540D\\u79F0\\uFF0C\\u6309\\u56DE\\u8F66\\u952E\\u786E\\u8BA4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this);\n  }\n}\nHeader.propTypes = {\n  code: PropType.func.isRequired\n};","map":{"version":3,"names":["React","Component","PropType","Header","handleKeyUp","event","target","keyCode","value","trim","alert","props","code","render","propTypes","func","isRequired"],"sources":["/Users/dip/VSCode/react_staging/src/component/Header/header.jsx"],"sourcesContent":["import React, { Component } from 'react'\nimport PropType from 'prop-types'\nimport  './header.css'\n\nexport default class Header extends Component {\n\n    static propTypes = {\n        code:PropType.func.isRequired\n    }\n\n\n    handleKeyUp = (event) =>{\n        const {target,keyCode} = event\n        //keyCode:是键盘点击的那一个键值，13代表着回车2\n        //判断是否是回车\n        if(keyCode !== 13) return \n        //判断这个输入是否空\n        if(target.value.trim() === ''){\n            alert(\"输入的不能为空\");\n            return\n        }\n        this.props.code(target.value);\n        target.value = \"\";\n    }\n    \n    render() {\n        return (\n            <div className =\"todo-header\">\n                <input onKeyUp={this.handleKeyUp}  type=\"text\" placeholder=\"请输入你的任务名称，按回车键确认\"/>\n            </div>\n        )\n    }\n}\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAQ,cAAc;AAAA;AAEtB,eAAe,MAAMC,MAAM,SAASF,SAAS,CAAC;EAAA;IAAA;IAAA,KAO1CG,WAAW,GAAIC,KAAK,IAAI;MACpB,MAAM;QAACC,MAAM;QAACC;MAAO,CAAC,GAAGF,KAAK;MAC9B;MACA;MACA,IAAGE,OAAO,KAAK,EAAE,EAAE;MACnB;MACA,IAAGD,MAAM,CAACE,KAAK,CAACC,IAAI,EAAE,KAAK,EAAE,EAAC;QAC1BC,KAAK,CAAC,SAAS,CAAC;QAChB;MACJ;MACA,IAAI,CAACC,KAAK,CAACC,IAAI,CAACN,MAAM,CAACE,KAAK,CAAC;MAC7BF,MAAM,CAACE,KAAK,GAAG,EAAE;IACrB,CAAC;EAAA;EAEDK,MAAM,GAAG;IACL,oBACI;MAAK,SAAS,EAAE,aAAa;MAAA,uBACzB;QAAO,OAAO,EAAE,IAAI,CAACT,WAAY;QAAE,IAAI,EAAC,MAAM;QAAC,WAAW,EAAC;MAAkB;QAAA;QAAA;QAAA;MAAA;IAAE;MAAA;MAAA;MAAA;IAAA,QAC7E;EAEd;AACJ;AA5BqBD,MAAM,CAEhBW,SAAS,GAAG;EACfF,IAAI,EAACV,QAAQ,CAACa,IAAI,CAACC;AACvB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}